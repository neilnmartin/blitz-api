//// -- LEVEL 1
//// -- Tables and References

// Creating tables
Table users as U {
  id int [pk, increment, unique, not null]
	username varchar [not null, unique]
	email varchar [not null, unique]
	password varchar
	token varchar
	first_name varchar
	last_name varchar
  created_at timestamp [default: `now()`]
}

Table series {
  id int [pk]
  title varchar
	country_code int
  created_at timestamp
  artist_id int [ref: > U.id] // inline relationship (many-to-one)
}

Table genres {
  id int [pk]
  name varchar
}

Table series_genres {
  id int [pk]
  series_id int [ref: > series.id]
  genre_id int [ref: > genres.id]
}

Table issue {
  id int [pk]
  title varchar
  artist_id int [ref: > U.id]
  series_id int [ref: > series.id]
 }
 


// Creating references
// You can also define relaionship separately
// > many-to-one; < one-to-many; - one-to-one
// Ref: U.country_code > issue.code  
// Ref: series.country_code > issue.code

//----------------------------------------------//

//// -- LEVEL 2
//// -- Adding column settings

Table artwork {
  id int [pk] // primary key
  artist_id int [not null, ref: > U.id]
  series_id int [not null, ref: > U.id]
  title varchar
  created_at timestamp [note: 'When order created'] // add column note
}

//----------------------------------------------//

//// -- Level 3 
//// -- Enum, Indexes

// Enum for 'products' table below
// Enum products_status {
//   out_of_stock
//   in_stock
//   running_low [note: 'less than 20'] // add column note
// }

// Indexes: You can define a single or multi-column index 
Table page {
  id int [pk]
  name varchar
  issue_id int [not null, ref: > issue.id]
  page_number int
  created_at timestamp [default: `now()`]
  // Indexes {
  //   (status) [name:'product_status']
  //   id [unique]
  // }
}


// Ref: "users"."id" < "users"."id"